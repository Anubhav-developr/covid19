{"version":3,"sources":["axios.js","components/List/List.js","components/Form/Form.js","Main/App.js","reportWebVitals.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","accept","List","useState","shops","setData","useEffect","get","then","res","posts","data","console","log","Form","history","useHistory","initialFormData","Object","freeze","username","usernumber","name","phone","city","state","formData","updateFormData","handleChange","e","target","value","trim","type","onChange","userNumber","supplier","supplierNumber","onClick","preventDefault","post","push","App","className","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAaeA,E,OATOC,EAAMC,OAAO,CACjCC,QAHc,6BAIdC,QAAS,IACTC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sB,OC0BGC,MAjCf,WACE,MAAwBC,mBAAS,CAC/BC,MAAO,KADT,mBAAaC,GAAb,WAcA,OAVAC,qBAAU,WACRX,EAAcY,MAAMC,MAAK,SAACC,GACxBJ,EAAQ,CACNK,MAAOD,EAAIE,OAEbC,QAAQC,IAAI,wCACZD,QAAQC,IAAIJ,EAAIE,WAEjB,CAACN,IAGF,8BACE,+BACE,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,6C,uBC6FOS,MAtHf,WACE,IAAMC,EAAUC,cACVC,EAAkBC,OAAOC,OAAO,CACpCC,SAAU,GACVC,WAAY,GACZC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,MAAO,KAGT,EAAmCtB,mBAASc,GAA5C,mBAAOS,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpBF,EAAe,2BACVD,GADS,kBAGXG,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,MAAMC,WAkBpC,OACE,gCACE,sCACA,iCACE,mCACE,kCACE,0CACA,uBACEZ,SAAS,OACTa,KAAK,OACLC,SAAUN,EACVN,KAAK,kBAKX,mCACE,kCACE,4CACA,uBACEa,WAAW,OACXF,KAAK,SACLC,SAAUN,EACVN,KAAK,oBAKX,mCACE,kCACE,uDACA,uBACEc,SAAS,OACTH,KAAK,OACLC,SAAUN,EACVN,KAAK,cAKX,mCACE,kCACE,yDACA,uBACEe,eAAe,OACfJ,KAAK,SACLC,SAAUN,EACVN,KAAK,eAKX,mCACE,kCACE,qCACA,uBACEE,KAAK,OACLS,KAAK,OACLC,SAAUN,EACVN,KAAK,cAIX,mCACE,kCACE,sCACA,uBACEG,MAAM,OACNQ,KAAK,OACLC,SAAUN,EACVN,KAAK,eAIX,uBACA,wBAAQW,KAAK,SAASK,QAzFP,SAACT,GACpBA,EAAEU,iBACF3B,QAAQC,IAAIa,GACZ/B,EACG6C,KAAK,GAAI,CACRlB,KAAMI,EAASJ,KACfC,MAAOG,EAASH,MAChBC,KAAME,EAASF,KACfC,MAAOC,EAASD,QAEjBjB,MAAK,SAACC,GACLM,EAAQ0B,KAAK,cA8Eb,2B,QCzDOC,MA7Cf,WAKE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,wCACA,mGAAqE,uBAArE,+CAGA,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,QAAT,kDAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,wCAKR,uBAEA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,kBCjCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9fa93bf0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"http://127.0.0.1:8000/api/\";\n\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n  },\n});\n\nexport default axiosInstance;\n","import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../../axios\";\nfunction List() {\n  const [data, setData] = useState({\n    shops: [],\n  });\n\n  useEffect(() => {\n    axiosInstance.get().then((res) => {\n      setData({\n        posts: res.data,\n      });\n      console.log(\"====================================\");\n      console.log(res.data);\n    });\n  }, [setData]);\n\n  return (\n    <div>\n      <ol>\n        <li>Row 1</li>\n        <li>Row 2</li>\n        <li>Row 1</li>\n        <li>Row 2</li>\n        <li>Row 1</li>\n        <li>Row 2</li>\n        <li>Row 1</li>\n        <li>Row 2</li>\n        <li>Row 1</li>\n        <li>Row 2</li>\n      </ol>\n    </div>\n  );\n}\n\nexport default List;\n","import React, { useState } from \"react\";\nimport axiosInstance from \"../../axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Form() {\n  const history = useHistory();\n  const initialFormData = Object.freeze({\n    username: \"\",\n    usernumber: \"\",\n    name: \"\",\n    phone: \"\",\n    city: \"\",\n    state: \"\",\n  });\n\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = (e) => {\n    updateFormData({\n      ...formData,\n      // Trimming any whitespace\n      [e.target.name]: e.target.value.trim(),\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    axiosInstance\n      .post(\"\", {\n        name: formData.name,\n        phone: formData.phone,\n        city: formData.city,\n        state: formData.state,\n      })\n      .then((res) => {\n        history.push(\"/list/\");\n      });\n  };\n  return (\n    <div>\n      <h1>Form</h1>\n      <form>\n        <fieldset>\n          <label>\n            <p>Your Name</p>\n            <input\n              username=\"name\"\n              type=\"text\"\n              onChange={handleChange}\n              name=\"username\"\n            />\n          </label>\n        </fieldset>\n\n        <fieldset>\n          <label>\n            <p>Your number</p>\n            <input\n              userNumber=\"name\"\n              type=\"number\"\n              onChange={handleChange}\n              name=\"usernumber\"\n            />\n          </label>\n        </fieldset>\n\n        <fieldset>\n          <label>\n            <p>Supplier/Dealer's Name</p>\n            <input\n              supplier=\"name\"\n              type=\"text\"\n              onChange={handleChange}\n              name=\"name\"\n            />\n          </label>\n        </fieldset>\n\n        <fieldset>\n          <label>\n            <p>Supplier/Dealer's Number</p>\n            <input\n              supplierNumber=\"name\"\n              type=\"number\"\n              onChange={handleChange}\n              name=\"phone\"\n            />\n          </label>\n        </fieldset>\n\n        <fieldset>\n          <label>\n            <p>City</p>\n            <input\n              city=\"name\"\n              type=\"text\"\n              onChange={handleChange}\n              name=\"city\"\n            />\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>State</p>\n            <input\n              state=\"name\"\n              type=\"text\"\n              onChange={handleChange}\n              name=\"state\"\n            />\n          </label>\n        </fieldset>\n        <br />\n        <button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport List from '../components/List/List' ;\nimport Form from '../components/Form/Form';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n    \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <h1>OxyGen</h1>\n        <h3>Help those in need by giving information about medical equipments<br></br> and resourses and contribute to humanity</h3>\n\n        \n        <Router>\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/List\">List of verified Dealers/suppliers</Link>\n              </li>\n              <li>\n                <Link to=\"/form\">Provide Information</Link>\n              </li>\n            </ul>\n          </div>\n        \n        <hr />\n\n        <Switch>\n          \n          <Route exact path=\"/List\">\n            <List />\n          </Route>\n          <Route exact path=\"/form\">\n            <Form />\n          </Route>\n        </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Main/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}